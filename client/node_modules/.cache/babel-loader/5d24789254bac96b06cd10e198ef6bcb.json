{"ast":null,"code":"var _jsxFileName = \"/Users/artmelkon/webdev/apollo-file-upload/client/src/components/Files.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\"; // import { GET_ALL_FILES } from \"../queries\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_ALL_FILES = gql`\n  query {\n    files\n  }\n`;\nexport const Files = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ALL_FILES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 20\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.files.map(x => {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        style: {\n          width: 200\n        },\n        src: `http://localhost:4000/images/${x}`,\n        alt: x\n      }, x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Files, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Files;\n\nvar _c;\n\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"sources":["/Users/artmelkon/webdev/apollo-file-upload/client/src/components/Files.js"],"names":["React","useQuery","gql","GET_ALL_FILES","Files","data","loading","error","console","log","files","map","x","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA6B,gBAA7B,C,CAEA;;;AAEA,OAAO,MAAMC,aAAa,GAAGD,GAAI;AACjC;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAME,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACE,aAAD,CAAzC;AACA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,sBACE;AAAA,cACGA,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAeC,CAAC,IAAI;AACnB;AAAA;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAkC,QAAA,GAAG,EAAG,gCAA+BD,CAAE,EAAzE;AAA4E,QAAA,GAAG,EAAEA;AAAjF,SAA+BA,CAA/B;AAAA;AAAA;AAAA;AAAA;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAbM;;GAAMR,K;UACsBH,Q;;;KADtBG,K","sourcesContent":["import React from \"react\";\nimport { useQuery, gql} from \"@apollo/client\";\n\n// import { GET_ALL_FILES } from \"../queries\";\n\nexport const GET_ALL_FILES = gql`\n  query {\n    files\n  }\n`;\n\nexport const Files = () => {\n  const { data, loading, error } = useQuery(GET_ALL_FILES);\n  if (loading) return <p>Loading...</p>;\n  if(error) return <p>Error</p>\n  console.log(data);\n\n  return (\n    <div>\n      {data.files.map(x => {\n        <img style={{width: 200}} key={x} src={`http://localhost:4000/images/${x}`} alt={x} />\n      })}\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}