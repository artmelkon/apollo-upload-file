{"ast":null,"code":"var _jsxFileName = \"/Users/artmelkon/webdev/apollo-file-upload/client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useMutation } from \"@apollo/client\"; // import { Upload } from \"./Upload\";\n// import { Files } from \"./Files\";\n\nimport { GET_ALL_FILES, UPLOAD_FILE } from \"../queries\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Upload = () => {\n  _s();\n\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    refetchQueries: [{\n      query: GET_ALL_FILES\n    }]\n  });\n  const onDrop = useCallback(([file]) => {\n    uploadFile({\n      variables: {\n        file\n      }\n    });\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop the files here ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Upload, \"Ym+0XAtA5JNW28HTeTkxO4kBnO4=\", false, function () {\n  return [useMutation, useDropzone];\n});\n\n_c = Upload;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Upload\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/artmelkon/webdev/apollo-file-upload/client/src/components/App.js"],"names":["React","useCallback","useDropzone","useMutation","GET_ALL_FILES","UPLOAD_FILE","Upload","uploadFile","refetchQueries","query","onDrop","file","variables","getRootProps","getInputProps","isDragActive","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;AACA;;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AACA,OAAO,WAAP;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,UAAD,IAAeJ,WAAW,CAACE,WAAD,EAAc;AAC5CG,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEL;AAAT,KAAD;AAD4B,GAAd,CAAhC;AAID,QAAMM,MAAM,GAAGT,WAAW,CACxB,CAAC,CAACU,IAAD,CAAD,KAAY;AACVJ,IAAAA,UAAU,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAV;AACD,GAHuB,EAIxB,CAACJ,UAAD,CAJwB,CAA1B;AAMA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDb,WAAW,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAAjE;AAEA,sBACE,oBAASG,YAAY,EAArB;AAAA,4BACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUA,CAvBM;;GAAMT,M;UACUH,W,EAUgCD,W;;;KAX1CI,M;;AAyBb,SAASU,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQA,G;AAST,eAAeA,GAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useMutation } from \"@apollo/client\";\n\n// import { Upload } from \"./Upload\";\n// import { Files } from \"./Files\";\n\nimport { GET_ALL_FILES, UPLOAD_FILE } from \"../queries\";\nimport \"./App.css\";\n\nexport const Upload = () => {\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    refetchQueries: [{ query: GET_ALL_FILES }],\n  });\n\n const onDrop = useCallback(\n   ([file]) => {\n     uploadFile({ variables: { file } });\n   },\n   [uploadFile]\n );\n const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n return (\n   <div {...getRootProps()}>\n     <input {...getInputProps()} />\n     {isDragActive ? (\n       <p>Drop the files here ...</p>\n     ) : (\n       <p>Drag 'n' drop some files here, or click to select files</p>\n     )}\n   </div>\n );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Upload />\n      {/* <Files /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}